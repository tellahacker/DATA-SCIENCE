# Visualize Website Traffic (Step 5 of the plan)
print("Visualizing Website Traffic (Search, Direct, Social Media) Over Months:")

# Filter for the specified sources and limit visitors to 100
df_traffic_filtered = df_traffic[df_traffic['Source'].isin(['Search', 'Direct', 'Social'])].copy()
df_traffic_filtered['Visitors'] = df_traffic_filtered['Visitors'].clip(upper=100)

# Pivot the data for grouped bar chart
df_traffic_pivot = df_traffic_filtered.pivot(index='Month', columns='Source', values='Visitors')

fig, ax = plt.subplots(figsize=(10, 6))

# Plot a grouped bar chart with a colormap from green to red
df_traffic_pivot.plot(kind='bar', ax=ax, color=plt.cm.RdYlGn(np.linspace(0, 1, len(df_traffic_pivot.columns))))

ax.set_xlabel('Month')
ax.set_ylabel('Number of Visitors (up to 100)')
ax.set_title('Website Traffic (Search, Direct, Social Media) Over Time (Monthly)', fontsize=14)
ax.tick_params(axis='x', rotation=45)
ax.legend(title='Source', bbox_to_anchor=(1.05, 1), loc='upper left')
ax.set_ylim(0, 100) # Ensure the y-axis limit remains at 100

plt.tight_layout()

# Display the plot
data = io.BytesIO()
plt.savefig(data)
image = F"data:image/png;base64,{base64.b64encode(data.getvalue()).decode()}"
alt = "Website Traffic (Search, Direct, Social Media) Over Time (Monthly)"
display.display(display.Markdown(F"""![{alt}]({image})"""))
plt.close(fig)
